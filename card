#!/usr/bin/env python3

# |--- Version ---|----------------------{{{
# October 8th 2017
version = '0.4'
#---}}}

# |--- Imported libraries ---|----------------------{{{
import os
import sys
#---}}}

# |--- Folder definitions ---|----------------------{{{
sharedfolder = '/usr/share/mycards/'
homefolder = '/home/runner/.mycards/'
#---}}}

# |--- show_instructions ---|----------------------{{{
def show_instructions():
	print('card (version ' + version + ')')
	print('Options:')
	print('card help')
	print('card show card_name')
	print('card add card_name')
	print('card remove card_name')
	print('card list')
#---}}}

# |--- printcard ---|----------------------{{{
def printcard(card_name):
	try:
		fid = open(sharedfolder + card_name, 'r')
		found = True
	except IOError:
		found = False
	if not found:
		try:
			fid = open(sharedfolder + card_name + '.txt', 'r')
			found = True
		except IOError:
			found = False
	if not found:
		try:
			fid = open(homefolder + card_name, 'r')
			found = True
		except IOError:
			found = False
	if not found:
		try:
			fid = open(homefolder + card_name + '.txt', 'r')
			found = True
		except IOError:
			found = False
	if not found:
		print('Card not found.')
	else:
		line = fid.readline()
		while line:
			print(line[0 : len(line) - 1])
			line = fid.readline()
		fid.close()
#---}}}

# |--- addcard ---|----------------------{{{
def addcard(card_name):
	try:
		fid = open(sharedfolder + card_name, 'r')
		found = True
	except IOError:
		found = False
	if not found:
		try:
			fid = open(homefolder + card_name, 'r')
			found = True
		except IOError:
			found = False
	if found:
		fid.close()
		print('Card with that name already exists.')
	else:
		try:
			fid = open(card_name, 'r')
			found = True
		except IOError:
			found = False
		if not found:
			print('Card to be saved not found.')
		else:
			fid.close()
			if os.geteuid() == 0:
				os.system('cp ' + card_name + ' ' + \
				sharedfolder)
			else:
				os.system('cp ' + card_name + ' ' + \
				homefolder)
#---}}}

# |--- run_program ---|----------------------{{{
def run_program(arguments):
	if len(arguments) == 0:
		finished = True
		show_instructions()
	else:
		finished = False
		command = arguments[0]
	if (not finished) and command == 'help':
		show_instructions()
		finished = True
	if (not finished) and command == 'show':
		try:
			card_name = arguments[1]
			printcard(card_name)
			finished = True
		except:
			finished = False
	if (not finished) and command == 'add':
		try:
			card_name = arguments[1]
			addcard(card_name)
			finished = True
		except:
			finished = False
	if (not finished) and command == 'list':
		print('==================================')
		print('Cards in the shared system folder:')
		print('----------------------------------')
		pipe_id = os.popen('ls /usr/share/mycards/')
		line = pipe_id.readline()
		while line:
			print(line[0 : len(line) - 1])
			line = pipe_id.readline()
		pipe_id.close()
		print('----------------------------------')
		print('')
		print('=========================')
		print('Cards in the user folder:')
		print('-------------------------')
		pipe_id = os.popen('ls /home/runner/.mycards/')
		line = pipe_id.readline()
		while line:
			print(line[0 : len(line) - 1])
			line = pipe_id.readline()
		pipe_id.close()
		print('-------------------------')
		finished = True
	if (not finished): # this has to be the final part of run_program
		show_instructions()
		finished = True
#---}}}

# |--- Main function ---|----------------------{{{
arguments = sys.argv
arguments = arguments[1 : ]
run_program(arguments)
#---}}}
